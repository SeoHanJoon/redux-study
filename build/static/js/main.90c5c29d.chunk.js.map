{"version":3,"sources":["actions/actions.js","reducer/reducer.js","Nav/nav.js","Counter2.js","Step/step0.js","Step/step1.js","Step/step2.js","Step/step3.js","Step/step4.js","Step/step5.js","Container/AddTodo.js","Components/Todo.js","Components/TodoList.js","Container/VisibleTodoList.js","Components/Link.js","Container/FilterLink.js","Components/Footer.js","Todo/TodoApp.js","App.js","serviceWorker.js","index.js"],"names":["ADD_TODO","TOGGLE_TODO","SET_VISIBILITY_FILTER","VisibilityFilters","SHOW_ALL","todoApp","combineReducers","todos","state","action","type","text","completed","map","todo","index","Object","assign","visibilityFilter","filter","Ul","styled","ul","Li","li","Nav","to","Counter2","useState","setOption","optionCate","subOptionCate","onChange","data","value","length","Article","article","Code","div","Depth1","p","Depth2","Step0","Step1","Step2","Depth3","Depth4","Depth5","Depth6","Depth7","Step3","Step4","Step5","href","AddTodo","input","dispatch","onSubmit","e","preventDefault","trim","ref","node","connect","Todo","onClick","style","textDecoration","TodoList","onTodoClick","key","getVisibleTodos","t","VisibleTodoList","id","Link","active","children","FilterLink","ownProps","Footer","TodoApp","Wrap","App","className","exact","path","component","Counter","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90c5c29d.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\n\nexport const VisibilityFilters = {\n  SHOW_ALL : 'SHOW_ALL',\n  SHOW_COMPLETED : 'SHOW_COMPLETED',\n  SHOW_ACTIVE : 'SHOW_ACTIVE'\n}\n\nexport function addTodo(text) {\n  return { type: ADD_TODO, text }\n}\nexport function toggleTodo(index) {\n  return { type: TOGGLE_TODO, index }\n}\nexport function setVisibilityFilter(filter) {\n  return { type: SET_VISIBILITY_FILTER, filter }\n}","import { combineReducers } from 'redux'\nimport {\n  ADD_TODO,\n  TOGGLE_TODO,\n  SET_VISIBILITY_FILTER,\n  VisibilityFilters\n} from '../actions/actions'\n \nconst { SHOW_ALL } = VisibilityFilters;\n\nfunction todos ( state = [] , action ) {\n  switch( action.type ) {\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          text: action.text,\n          completed: false\n        }\n      ]\n    case TOGGLE_TODO:\n      return state.map((todo, index) => {\n        if( index === action.index ) {\n          return Object.assign({}, todo, {\n            completed: !todo.completed\n          })\n        }\n        return todo\n      })\n    default:\n      return state;\n  }\n}\n\nfunction visibilityFilter ( state = SHOW_ALL , action ) {\n  switch( action.type ) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter\n    default:\n      return state;\n  }\n}\n\nconst todoApp = combineReducers({\n  todos,\n  visibilityFilter\n})\n\nexport default todoApp;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Ul = styled.ul`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  margin: 0;\n  padding: 15px 0;\n  text-align: center;\n  border-bottom: solid 1px #ddd;\n  background-color: #fff;\n`;\nconst Li = styled.li`\n  display: inline-block;\n  width: calc(100% / 8);\n`;\n\nfunction Nav() {\n  return (\n    <Ul>\n      <Li>\n        <Link to=\"/\">Home</Link>\n      </Li>\n      <Li>\n        <Link to=\"/step0\">Step0</Link>\n      </Li>\n      <Li>\n        <Link to=\"/step1\">Step1</Link>\n      </Li>\n      <Li>\n        <Link to=\"/step2\">Step2</Link>\n      </Li>\n      <Li>\n        <Link to=\"/step3\">Step3</Link>\n      </Li>\n      <Li>\n        <Link to=\"/step4\">Step4</Link>\n      </Li>\n      <Li>\n        <Link to=\"/step5\">Step5</Link>\n      </Li>\n      <Li>\n        <Link to=\"/todo\">Todo</Link>\n      </Li>\n    </Ul>\n  );\n}\n\nexport default Nav;\n","import React, { useState, useEffect } from \"react\";\n\nconst Counter2 = ({ text = \"\" }) => {\n  const [option, setOption] = useState(\"동물\");\n  const [optionCate] = useState([\"동물\", \"식물\"]);\n  const [subOptionCate, setSubOptionCate] = useState([]);\n\n  return (\n    <>\n      <select onChange={setOption}>\n        {optionCate.map(data => (\n          <option value={data}>{data}</option>\n        ))}\n      </select>\n      {subOptionCate.length !== 0 && (\n        <select>\n          {subOptionCate.map(data => (\n            <option value={data}>{data}</option>\n          ))}\n        </select>\n      )}\n    </>\n  );\n};\n\nexport default Counter2;\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst Article = styled.article`\n  padding: 100px 0;\n  font-size: 25px;\n`;\nconst Code = styled.div`\n  display:inline-block;\n  padding: 20px 80px 20px 40px;\n  line-height: 1.8em;\n  background-color: #eee;\n`;\nconst Depth1 = styled.p`\n  margin: 0;\n  text-indent: 30px;\n`;\nconst Depth2 = styled.p`\n  margin: 0;\n  text-indent: 60px;\n`;\n\nfunction Step0() {\n  return (\n    <>\n      <h1>Redux Tutorial</h1>\n      <section>\n        <Article>\n          <h2>Action</h2>\n          <p>\n            Action이란, Store에 정보를 전달하기 위한 데이터 묶음으로<br />\n            이벤트를 구분할 수 있는 식별자와 해당 이벤트의 실행에 필요한 값을 함께 가지고 있는 객체입니다.<br />\n          </p>\n          <Code>\n            {\"{\"}<br />\n              <Depth1>type: \"식별자\",</Depth1>\n              <Depth1>payload: \"값\"</Depth1>\n            {\"}\"}\n          </Code>\n        </Article>\n        <Article>\n          <h2>Action Creator</h2>\n          <p>\n            Action Creator란, Action을 생성해주는 함수이며 그게 전부입니다.<br />\n          </p>\n          <Code>\n            function AddTodo(){\"{\"}<br />\n              <Depth1>return {\"{\"}</Depth1>\n                <Depth2>type: \"식별자\",</Depth2>\n                <Depth2>payload: \"값\"</Depth2>\n              <Depth1>{\"}\"}</Depth1>\n            {\"}\"}\n          </Code>\n        </Article>\n        <Article>\n          <h2>Dispatch</h2>\n          <p>\n            Dispatch란, Component와 Store를 감시하며 값을 전달하는 역할을 합니다.<br />\n            Component에서 Action이 발행되면, 감시하고 있던 Dispatch가 Action을 Reducer로 전달합니다.<br />\n            Store에서 값이 변경되면, 감시하고 있던 Dispatch가 new State를 Component로 전달합니다.\n          </p>\n        </Article>\n        <Article>\n          <h2>Reducer</h2>\n          <p>\n            Reducer란, 각 Action에 맞추어 어떻게 상태를 변화시킬지 관리하는 함수입니다.<br />\n            Dispatch를 통해 전달된 Action과 기존 Store에 저장된 old State 객체를 합쳐서 new State 객체를 생성합니다.<br />\n            이 때, 생성된 new State 객체는 Store에 저장됩니다.\n          </p>\n        </Article>\n        <Article>\n          <h2>Store</h2>\n          <p>Store란, 이 앱의 전체 상태를 저장하고 있는 저장소입니다.</p>\n        </Article>\n      </section>\n    </>\n  )\n}\n\nexport default Step0;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Article = styled.article`\n  padding: 100px 0;\n  font-size: 25px;\n`;\nconst Code = styled.div`\n  display:inline-block;\n  padding: 20px 80px 20px 40px;\n  line-height: 1.8em;\n  background-color: #eee;\n`;\nconst Depth1 = styled.p`\n  margin: 0;\n  text-indent: 30px;\n`;\n\nfunction Step1() {\n  return (\n    <>\n      <h1>Step1. Action 만들기</h1>\n      <section>\n        <Article>\n          <p>Todo List를 만들기 위해서 필요한 기능을 정의합니다.</p>\n          <ol>\n            <li>Todo 항목 추가하기</li>\n            <li>추가된 Todo 항목을 완료시키거나 다시 활성화하기</li>\n            <li>화면에 특정 Todo들만 보여주기</li>\n          </ol>\n          <br />\n          <p>\n            위와 같이 정의할 경우, Action은 총 3개가 필요합니다.<br />\n            action.js를 생성하여 아래와 같이 Action의 식별자를 변수로 만들어줍니다.\n          </p>\n          <Code>\n            export const ADD_TODO = 'ADD_TODO';<br />\n            export const TOGGLE_TODO = 'TOGGLE_TODO';<br />\n            export const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\n          </Code>\n          <br /><br /><br /><br /><br /><br />\n          <p>\n            기능 정의 3번에서 '특정 Todo들만 보여주기'로 하였습니다. 특정 Todo에는 [ 모두 / 진행중 / 완료 ]로 구분할 수 있습니다.<br />\n            action.js에 아래와 같이 필터 타입을 변수로 만들어줍니다.\n          </p>\n          <Code>\n            export const VisibilityFilters = {\"{\"}\n              <Depth1>SHOW_ALL : 'SHOW_ALL',</Depth1>\n              <Depth1>SHOW_COMPLETED : 'SHOW_COMPLETED',</Depth1>\n              <Depth1>SHOW_ACTIVE : 'SHOW_ACTIVE'</Depth1>\n            {\"}\"}\n          </Code>\n          <br /><br /><br /><br /><br /><br />\n          <p>Action에서 사용될 공통 변수들이 작성 완료되었습니다.</p>\n          <p>이제 Action을 자동적으로 만들어낼 함수인 Action Creator를 만들어 줍니다.</p>\n          <Code>\n            export function addTodo(text) {\"{\"}\n              <Depth1>return {\"{\"} type: ADD_TODO, text {\"}\"}</Depth1>\n            {\"}\"}<br />\n            export function toggleTodo(index) {\"{\"}\n              <Depth1>return {\"{\"} type: TOGGLE_TODO, index {\"}\"}</Depth1>\n            {\"}\"}<br />\n            export function setVisibilityFilter(filter) {\"{\"}\n              <Depth1>return {\"{\"} type: SET_VISIBILITY_FILTER, filter {\"}\"}</Depth1>\n            {\"}\"}\n          </Code>\n        </Article>\n      </section>\n    </>\n  )\n}\n\nexport default Step1;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Article = styled.article`\n  padding: 100px 0;\n  font-size: 25px;\n`;\nconst Code = styled.div`\n  display:inline-block;\n  padding: 20px 80px 20px 40px;\n  line-height: 1.8em;\n  background-color: #eee;\n`;\nconst Depth1 = styled.p`\n  margin: 0;\n  text-indent: 30px;\n`;\n\nfunction Step2() {\n  return (\n    <>\n      <h1>Step2. Reducer 만들기 #1</h1>\n      <section>\n        <Article>\n          <p>\n            Reducer는 각 Action에 맞추어 Store의 oldState를 합쳐주는 일을 진행합니다.<br />\n            Reducer가 작동하기 위한 최소한의 기본 구조를 작성하도록 합니다.<br /><br />\n            action.js에서 만든 변수들을 가져옵니다.\n          </p>\n          <Code>\n            import {\"{\"} VisibilityFilters {\"}\"} from './action.js'\n          </Code>\n          <p>\n            맨 처음에는 발행된 Action이 없기 때문에 Store에 저장할 기본값을 만들어 줍니다. \n          </p>\n          <Code>\n            const initialState = {\"{\"}\n              <Depth1>visibilityFilter: VisibilityFilters.SHOW_ALL,</Depth1>\n              <Depth1>todos: []</Depth1>\n            {\"}\"}\n          </Code>\n          <p>\n            그리고 Reducer가 실행되면 Action의 식별자에 맞추어서 new State를 만들 함수를 정의합니다.\n          </p>\n          <Code>\n            function todoApp ( state = initialState , action ) {\"{\"}\n              <Depth1>return state;</Depth1>\n            {\"}\"}\n          </Code>\n          <p>완성된 코드는 아래와 같습니다.</p>\n          <Code>\n            import {\"{\"} VisibilityFilters {\"}\"} from './action.js'\n            <p>&nbsp;</p>\n            const initialState = {\"{\"}\n              <Depth1>visibilityFilter: VisibilityFilters.SHOW_ALL,</Depth1>\n              <Depth1>todos: []</Depth1>\n            {\"}\"}\n            <p>&nbsp;</p>\n            function todoApp ( state = initialState , action ) {\"{\"}\n              <Depth1>return state;</Depth1>\n            {\"}\"}\n          </Code>\n        </Article>\n      </section>\n    </>\n  )\n}\n\nexport default Step2;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Article = styled.article`\n  padding: 100px 0;\n  font-size: 25px;\n`;\nconst Code = styled.div`\n  display:inline-block;\n  padding: 20px 80px 20px 40px;\n  line-height: 1.8em;\n  background-color: #eee;\n`;\nconst Depth1 = styled.p`\n  margin: 0;\n  text-indent: 30px;\n`;\nconst Depth2 = styled.p`\n  margin: 0;\n  text-indent: 60px;\n`;\nconst Depth3 = styled.p`\n  margin: 0;\n  text-indent: 90px;\n`;\nconst Depth4 = styled.p`\n  margin: 0;\n  text-indent: 120px;\n`;\nconst Depth5 = styled.p`\n  margin: 0;\n  text-indent: 150px;\n`;\nconst Depth6 = styled.p`\n  margin: 0;\n  text-indent: 180px;\n`;\nconst Depth7 = styled.p`\n  margin: 0;\n  text-indent: 210px;\n`;\n\nfunction Step3() {\n  return (\n    <>\n      <h1>Step3. Reducer 만들기 #2</h1>\n      <section>\n        <Article>\n          <p>\n            기본적인 구조가 갖추어진 Reducer에 필터 기능을 추가하도록 하겠습니다.\n          </p>\n          <Code>\n            import {\"{\"}<br />\n              <Depth1>SET_VISIBILITY_FILTER,</Depth1>\n              <Depth1>VisibilityFilters</Depth1>\n            {\"}\"} from './action.js'\n            <p>&nbsp;</p>\n            const initialState = {\"{\"}\n              <Depth1>visibilityFilter: VisibilityFilters.SHOW_ALL,</Depth1>\n              <Depth1>todos: []</Depth1>\n            {\"}\"}\n            <p>&nbsp;</p>\n            function todoApp ( state = initialState , action ) {\"{\"}\n              <Depth1>switch( action.type ) {\"{\"}</Depth1>\n                <Depth2>case SET_VISIBILITY_FILTER:</Depth2>\n                  <Depth3>return Object.assign({\"{}\"}, state, {\"{\"}</Depth3>\n                    <Depth4>visibilityFilter: action.filter</Depth4>\n                  <Depth3>})</Depth3>\n                <Depth2>default:</Depth2>\n                  <Depth3>return state;</Depth3>\n              <Depth1>{\"}\"}</Depth1>\n            {\"}\"}\n          </Code>\n        </Article>\n        <Article>\n          <p>\n            이어서 다른 Action에 대해서도 new State를 만들 수 있도록 작성합니다.\n          </p>\n          <Code>\n            import {\"{\"}<br />\n              <Depth1>ADD_TODO,</Depth1>\n              <Depth1>TOGGLE_TODO,</Depth1>\n              <Depth1>SET_VISIBILITY_FILTER,</Depth1>\n              <Depth1>VisibilityFilters</Depth1>\n            {\"}\"} from './action.js'\n            <p>&nbsp;</p>\n            const initialState = {\"{\"}\n              <Depth1>visibilityFilter: VisibilityFilters.SHOW_ALL,</Depth1>\n              <Depth1>todos: []</Depth1>\n            {\"}\"}\n            <p>&nbsp;</p>\n            function todoApp ( state = initialState , action ) {\"{\"}\n              <Depth1>switch( action.type ) {\"{\"}</Depth1>\n                <Depth2>case SET_VISIBILITY_FILTER:</Depth2>\n                  <Depth3>return Object.assign({\"{}\"}, state, {\"{\"}</Depth3>\n                    <Depth4>visibilityFilter: action.filter</Depth4>\n                  <Depth3>})</Depth3>\n                <Depth2>case ADD_TODO:</Depth2>\n                  <Depth3>return Object.assign({\"{}\"}, state, {\"{\"}</Depth3>\n                    <Depth4>todos: [</Depth4>\n                      <Depth5>...state.todos,</Depth5>\n                      <Depth5>{\"{\"}</Depth5>\n                        <Depth6>text: action.text,</Depth6>\n                        <Depth6>completed: false</Depth6>\n                      <Depth5>{\"}\"}</Depth5>\n                    <Depth4>]</Depth4>\n                  <Depth3>})</Depth3>\n                <Depth2>case TOGGLE_TODO:</Depth2>\n                  <Depth3>return Object.assign({\"{}\"}, state, {\"{\"}</Depth3>\n                    <Depth4>todos: state.todos.map((todo, index) => {\"{\"}</Depth4>\n                      <Depth5>if( index === action.index ) {\"{\"}</Depth5>\n                        <Depth6>return Object.assign({\"{}\"}, todo, {\"{\"}</Depth6>\n                          <Depth7>completed: !todo.completed</Depth7>\n                        <Depth6>})</Depth6>\n                      <Depth5>}</Depth5>\n                      <Depth5>return todo</Depth5>\n                    <Depth4>})</Depth4>\n                  <Depth3>})</Depth3>\n                <Depth2>default:</Depth2>\n                  <Depth3>return state;</Depth3>\n              <Depth1>{\"}\"}</Depth1>\n            {\"}\"}\n          </Code>\n        </Article>\n        <Article>\n          <p>\n            하나의 함수에 모든 기능이 다 있으니 복잡해졌습니다.<br />\n            todo의 관리와 필터 기능을 분리하고 정리도 해보도록 하겠습니다.\n          </p>\n          <Code>\n            import {\"{\"}<br />\n              <Depth1>ADD_TODO,</Depth1>\n              <Depth1>TOGGLE_TODO,</Depth1>\n              <Depth1>SET_VISIBILITY_FILTER,</Depth1>\n              <Depth1>VisibilityFilters</Depth1>\n            {\"}\"} from './action.js'\n            <p>&nbsp;</p>\n            const {\"{ SHOW_ALL }\"} = VisibilityFilters;\n            <p>&nbsp;</p>\n            function todos ( state = [] , action ) {\"{\"}\n              <Depth1>switch( action.type ) {\"{\"}</Depth1>\n                <Depth2>case ADD_TODO:</Depth2>\n                  <Depth3>return Object.assign({\"{}\"}, state, {\"{\"}</Depth3>\n                    <Depth4>todos: [</Depth4>\n                      <Depth5>...state.todos,</Depth5>\n                      <Depth5>{\"{\"}</Depth5>\n                        <Depth6>text: action.text,</Depth6>\n                        <Depth6>completed: false</Depth6>\n                      <Depth5>{\"}\"}</Depth5>\n                    <Depth4>]</Depth4>\n                  <Depth3>})</Depth3>\n                <Depth2>case TOGGLE_TODO:</Depth2>\n                  <Depth3>return Object.assign({\"{}\"}, state, {\"{\"}</Depth3>\n                    <Depth4>todos: state.todos.map((todo, index) => {\"{\"}</Depth4>\n                      <Depth5>if( index === action.index ) {\"{\"}</Depth5>\n                        <Depth6>return Object.assign({\"{}\"}, todo, {\"{\"}</Depth6>\n                          <Depth7>completed: !todo.completed</Depth7>\n                        <Depth6>})</Depth6>\n                      <Depth5>}</Depth5>\n                      <Depth5>return todo</Depth5>\n                    <Depth4>})</Depth4>\n                  <Depth3>})</Depth3>\n                <Depth2>default:</Depth2>\n                  <Depth3>return state;</Depth3>\n              <Depth1>{\"}\"}</Depth1>\n            {\"}\"}\n            <p>&nbsp;</p>\n            function visibilityFilter ( state = SHOW_ALL , action ) {\"{\"}\n              <Depth1>switch( action.type ) {\"{\"}</Depth1>\n                <Depth2>case SET_VISIBILITY_FILTER:</Depth2>\n                  <Depth3>return Object.assign({\"{}\"}, state, {\"{\"}</Depth3>\n                    <Depth4>visibilityFilter: action.filter</Depth4>\n                  <Depth3>})</Depth3>\n                <Depth2>default:</Depth2>\n                  <Depth3>return state;</Depth3>\n              <Depth1>{\"}\"}</Depth1>\n            {\"}\"}\n            <p>&nbsp;</p>\n            function todoApp(state = {\"{}\"}, action) {\"{\"}\n              <Depth1>return {\"{\"}</Depth1>\n                <Depth2>visibilityFilter: visibilityFilter(state.visibilityFilter, action),</Depth2>\n                <Depth2>todos: todos(state.todos, action)</Depth2>\n              <Depth1>}</Depth1>\n            }\n          </Code>\n        </Article>\n        <Article>\n          <p>\n            분리 및 정리가 완료되었습니다.<br />\n            combineReducers를 통해 Reducer를 묶어주고, 한 번 더 정리해보겠습니다.\n          </p>\n          <Code>\n            import {\"{ combineReducers }\"} from 'redux'<br />\n            import {\"{\"}<br />\n              <Depth1>ADD_TODO,</Depth1>\n              <Depth1>TOGGLE_TODO,</Depth1>\n              <Depth1>SET_VISIBILITY_FILTER,</Depth1>\n              <Depth1>VisibilityFilters</Depth1>\n            {\"}\"} from './action.js'\n            <p>&nbsp;</p>\n            const {\"{ SHOW_ALL }\"} = VisibilityFilters;\n            <p>&nbsp;</p>\n            function todos ( state = [] , action ) {\"{\"}\n              <Depth1>switch( action.type ) {\"{\"}</Depth1>\n                <Depth2>case ADD_TODO:</Depth2>\n                  <Depth3>return [</Depth3>\n                    <Depth4>...state,</Depth4>\n                    <Depth4>{\"{\"}</Depth4>\n                      <Depth5>text: action.text,</Depth5>\n                      <Depth5>completed: false</Depth5>\n                    <Depth4>{\"}\"}</Depth4>\n                  <Depth3>]</Depth3>\n                <Depth2>case TOGGLE_TODO:</Depth2>\n                  <Depth3>return state.map((todo, index) => {\"{\"}</Depth3>\n                    <Depth4>if( index === action.index ) {\"{\"}</Depth4>\n                      <Depth5>return Object.assign({\"{}\"}, todo, {\"{\"}</Depth5>\n                        <Depth6>completed: !todo.completed</Depth6>\n                      <Depth5>})</Depth5>\n                    <Depth4>}</Depth4>\n                    <Depth4>return todo</Depth4>\n                  <Depth3>})</Depth3>\n                <Depth2>default:</Depth2>\n                  <Depth3>return state;</Depth3>\n              <Depth1>{\"}\"}</Depth1>\n            {\"}\"}\n            <p>&nbsp;</p>\n            function visibilityFilter ( state = SHOW_ALL , action ) {\"{\"}\n              <Depth1>switch( action.type ) {\"{\"}</Depth1>\n                <Depth2>case SET_VISIBILITY_FILTER:</Depth2>\n                  <Depth3>return action.filter</Depth3>\n                <Depth2>default:</Depth2>\n                  <Depth3>return state;</Depth3>\n              <Depth1>{\"}\"}</Depth1>\n            {\"}\"}\n            <p>&nbsp;</p>\n            const todoApp = combineReducers({\"{\"}\n              <Depth1>todos,</Depth1>\n              <Depth1>visibilityFilter</Depth1>\n            })\n            <p>&nbsp;</p>\n            export default todoApp;\n          </Code>\n        </Article>\n      </section>\n    </>\n  )\n}\n\nexport default Step3;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Article = styled.article`\n  padding: 100px 0;\n  font-size: 25px;\n`;\nconst Code = styled.div`\n  display:inline-block;\n  padding: 20px 80px 20px 40px;\n  line-height: 1.8em;\n  background-color: #eee;\n`;\nconst Depth1 = styled.p`\n  margin: 0;\n  text-indent: 30px;\n`;\nconst Depth2 = styled.p`\n  margin: 0;\n  text-indent: 60px;\n`;\n\nfunction Step4() {\n  return (\n    <>\n      <h1>Step4. Store 만들기</h1>\n      <section>\n        <Article>\n          <p>\n            이제 Reducer까지 다 만들었습니다.<br />\n            여기서 생성된 new State를 저장할 Store를 연결하도록 하겠습니다.\n          </p>\n          <Code>\n            import {\"{ createStore }\"} from 'redux'<br />\n            import todoApp from './reducers'<br />\n            const store = createStore(todoApp)\n          </Code>\n        </Article>\n        <Article>\n          <p>\n            짜잔, 연결되었습니다.<br />\n            이제 앱에서 맨 처음에 열리는 컴포넌트인 index.js의 {\"<App>\"}에 연결합니다.\n          </p>\n          <Code>\n            import React from 'react';<br />\n            import ReactDOM from 'react-dom';<br />\n            import {\"{ Provider }\"} from 'react-redux'<br />\n            import {\"{ createStore }\"} from 'redux'<br />\n            import todoApp from './reducers'<br />\n            import './index.css';<br />\n            import App from './App';<br />\n            import * as serviceWorker from './serviceWorker';<br />\n            <br />\n            const store = createStore(todoApp)<br />\n            <br />\n            ReactDOM.render(<br />\n              <Depth1>{\"<Provider store={store}>\"}<br /></Depth1>\n                <Depth2>{\"<App />\"}<br /></Depth2>\n              <Depth1>{\"</Provider>\"}<br /></Depth1>\n            , document.getElementById('root'));\n          </Code>\n        </Article>\n      </section>\n    </>\n  )\n}\n\nexport default Step4;","import React from 'react';\nimport styled from 'styled-components'\n\nconst Article = styled.article`\n  padding: 100px 0;\n  font-size: 25px;\n`;\nconst Code = styled.div`\n  display:inline-block;\n  padding: 20px 80px 20px 40px;\n  line-height: 1.8em;\n  background-color: #eee;\n`;\nconst Depth1 = styled.p`\n  margin: 0;\n  text-indent: 30px;\n`;\nconst Depth2 = styled.p`\n  margin: 0;\n  text-indent: 60px;\n`;\nconst Depth3 = styled.p`\n  margin: 0;\n  text-indent: 90px;\n`;\n\nfunction Step5() {\n  return (\n    <>\n      <h1>Step5. 컴포넌트 만들기</h1>\n      <section>\n        <Article>\n          <p>\n            이제 Reducer까지 다 만들었습니다.<br />\n            이제 그냥 컨테이너와 컴포넌트를 만들면 됩니다!<br />\n            아래 링크를 통해 공식 문서에서 제공하는 가이드에 맞춰 작성하시면 됩니다.\n          </p>\n          <Code>\n            <a href=\"https://redux.js.org/basics/usage-with-react\">https://redux.js.org/basics/usage-with-react</a>\n          </Code>\n        </Article>\n      </section>\n    </>\n  )\n}\n\nexport default Step5;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions/actions'\n\nlet AddTodo = ({ dispatch }) => {\n  let input\n\n  return (\n    <div>\n      <form\n        onSubmit={e => {\n          e.preventDefault()\n          if (!input.value.trim()) {\n            return\n          }\n          dispatch(addTodo(input.value))\n          input.value = ''\n        }}\n      >\n        <input\n          ref={node => {\n            input = node\n          }}\n        />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  )\n}\nAddTodo = connect()(AddTodo)\n\nexport default AddTodo","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? 'line-through' : 'none'\n    }}\n  >\n    {text}\n  </li>\n)\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n}\n\nexport default Todo","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, onTodoClick }) => (\n  <ul>\n    {todos.map((todo, index) => (\n      <Todo key={index} {...todo} onClick={() => onTodoClick(index)} />\n    ))}\n  </ul>\n)\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  onTodoClick: PropTypes.func.isRequired\n}\n\nexport default TodoList;","import { connect } from 'react-redux'\nimport { toggleTodo } from '../actions/actions'\nimport TodoList from '../Components/TodoList'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case 'SHOW_ALL':\n      return todos\n    case 'SHOW_COMPLETED':\n      return todos.filter(t => t.completed)\n    case 'SHOW_ACTIVE':\n      return todos.filter(t => !t.completed)\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTodoClick: id => {\n      dispatch(toggleTodo(id))\n    }\n  }\n}\n\nconst VisibleTodoList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList)\n\nexport default VisibleTodoList","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Link = ({ active, children, onClick }) => {\n  if (active) {\n    return <span>{children}</span>\n  }\n\n  return (\n    <a\n      href=\"\"\n      onClick={e => {\n        e.preventDefault()\n        onClick()\n      }}\n    >\n      {children}\n    </a>\n  )\n}\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\nexport default Link","import { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions/actions'\nimport Link from '../Components/Link'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    active: ownProps.filter === state.visibilityFilter\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onClick: () => {\n      dispatch(setVisibilityFilter(ownProps.filter))\n    }\n  }\n}\n\nconst FilterLink = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Link)\n\nexport default FilterLink","import React from 'react'\nimport FilterLink from '../Container/FilterLink'\nimport { VisibilityFilters } from '../actions/actions'\n\nconst Footer = () => (\n  <p>\n    Show: <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n    {', '}\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n    {', '}\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n  </p>\n)\n\nexport default Footer","import React from 'react'\nimport AddTodo from '../Container/AddTodo'\nimport VisibleTodoList from '../Container/VisibleTodoList'\nimport Footer from '../Components/Footer'\n\nfunction TodoApp(){\n  return (\n    <>\n      <AddTodo />\n      <VisibleTodoList />\n      <Footer />\n    </>\n  )\n}\n\nexport default TodoApp;","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Nav from \"./Nav/nav\";\nimport Counter from \"./Counter2\";\nimport Step0 from \"./Step/step0\";\nimport Step1 from \"./Step/step1\";\nimport Step2 from \"./Step/step2\";\nimport Step3 from \"./Step/step3\";\nimport Step4 from \"./Step/step4\";\nimport Step5 from \"./Step/step5\";\nimport Todo from \"./Todo/TodoApp\";\n\nconst Wrap = styled.div`\n  padding-top: 50px;\n`;\n\nfunction App() {\n  return (\n    <Wrap className=\"App\">\n      <BrowserRouter>\n        <Nav />\n        <Route exact path=\"/\" component={Counter} />\n        <Route path=\"/step0\" component={Step0} />\n        <Route path=\"/step1\" component={Step1} />\n        <Route path=\"/step2\" component={Step2} />\n        <Route path=\"/step3\" component={Step3} />\n        <Route path=\"/step4\" component={Step4} />\n        <Route path=\"/step5\" component={Step5} />\n        <Route path=\"/todo\" component={Todo} />\n      </BrowserRouter>\n    </Wrap>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport todoApp from './reducer/reducer'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(todoApp)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}